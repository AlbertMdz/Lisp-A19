package GeneradorGrafoAleatorio;

/**
 *
 * @author rike
 */

import java.util.LinkedList; 
import java.util.Queue; 



public class BFS extends Abs_Grafo {
    private Abs_Grafo _grafoExplorado;
    private Queue<Integer> _capas = new LinkedList<>();
    boolean[] descubiertos;
    private int _raiz;
    private Grafo _arbolBFS = new Grafo();
    
    int[] array = new int[1];
    
    
    public BFS(Abs_Grafo grafo, int s){
        _raiz = s;
        _grafoExplorado = grafo;        
        descubiertos = new boolean[grafo._numNodos];
        descubiertos[_raiz] = true;
        _arbolBFS.setNodos(_grafoExplorado._nodos);
        this._esDirigido = grafo._esDirigido;
        this._algoritmo="BFS";
    }
    
    @Override
    public Grafo ConstruyeGrafo(){
        Explorar();
        return _arbolBFS;
    }
    
    public void Explorar(){
        int contadorCapa = 0;
        _capas.add(_raiz);
        int origen = _raiz;
        while(!_capas.isEmpty()){
            origen = _capas.remove();            
            for(int destino = 0; destino < _grafoExplorado.getListaAdjacencia(origen).size(); destino++){
                int nodoDestino = _grafoExplorado.getListaAdjacencia(origen).get(destino);
                if(descubiertos[nodoDestino] == false ){
                    descubiertos[nodoDestino] = true;  
                    if(!_capas.contains(nodoDestino));
                        _capas.add(nodoDestino);
                    _arbolBFS._aristas.put(getNombreArista(origen, nodoDestino) , new Arista(_arbolBFS._nodos.get(origen), _arbolBFS._nodos.get(nodoDestino)));
                }                
            }
        }
    }
    
    @Override
    public String toString(){
        StringBuilder grafoString = new StringBuilder();
        String tipoGrafo = _esDirigido ? "digraph" : "graph";
        grafoString.append(tipoGrafo);
        grafoString.append(" grafo {\n");
        this._arbolBFS._aristas.forEach((key, value) -> {
            grafoString.append(key);
            grafoString.append(";\n");                
        });
        grafoString.append("}");
        System.out.println(grafoString.toString());        
        return grafoString.toString();
    }
    
    
    
    
}